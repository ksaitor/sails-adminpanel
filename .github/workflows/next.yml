name: Publish Package to npmjs
on:
  push:
    branches:
      - next
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      # waiting https://github.com/ds300/patch-package/issues/339
      - run: npm i && npm run test:init 2>&1 || true && npm run gulp && npm run test
      
      # resolve version
      - run: rm -rf assets/src test node_modules docs && find . -type f -name '*.ts' ! -name '*.d.ts' -delete
      - run: set -x; BRANCH=${GITHUB_REF##*/} PACKAGE=$(cat package.json | jq -r '.["name"]')  VERNPM=$(curl https://registry.npmjs.org/$PACKAGE | jq -r '.["dist-tags"].'${BRANCH} | awk -F. -v OFS=. '{$NF += 1 ; print}')   VERLOC=$(cat package.json | jq -r '.["version"]')   VEROUT=$(printf "$VERNPM\n$VERLOC\n" | sort -V -r | awk 'NR==1 {print; exit}') &&  jq -r '.version = "'${VEROUT}'-'${BRANCH}'"' package.json > /tmp/package.json && mv /tmp/package.json ./package.json
      - run: PACKAGE_NAME=sails-adminpanel; VERSIONS=$(npm show $PACKAGE_NAME versions --json | jq '.[]' | grep "next" | tr -d '"'); for VERSION in $VERSIONS; do npm unpublish $PACKAGE_NAME@$VERSION --tag next; done
      - run: npm publish --tag ${GITHUB_REF##*/}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}