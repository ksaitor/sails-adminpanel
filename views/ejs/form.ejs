<% include head %>
<% var entity = {uri: sails.config.adminpanel.routePrefix + '/form/' + slug, config: {model: false} } %>
<% include headContent %>

<form id="form" action="<%- sails.config.adminpanel.routePrefix %>/form/<%= slug %>" method="POST" enctype="multipart/form-data">
    <div class="layout">
        <%# global variables %>
        <script>
            var jsonEditor = {};
            var tables = {};
        </script>

        <% Object.keys(formData).forEach(function(key) { %>
            <label class="admin-panel__title" for="form-<%=key%>"><%= formData[key].title %></label>
            <% if(formData[key].tooltip) { %>
                <a href="javascript:void(0)" role="tooltip" aria-haspopup="true" class="tooltip tooltip-md tooltip-top-right">
                    <i class="las la-info-circle"></i>
                    <span class="tooltip-content"><%= formData[key].tooltip %></span>
                </a>
            <% } %>
            <% if (formData[key].description) { %>
                <p><label><%= formData[key].description %></label></p>
            <% } %>
            <% var field = {} %>
            <% field.config = formData[key] %>
            <% field.model = {} %>
            <% var value = formData[key].value %>

            <div class="admin-panel__widget">
                <%- include("mixin/fieldWidget.ejs", {field: field, entity: entity, value: value, key: key}) %>
            </div>
        <% }) %>
        <% if (sails.config.security.csrf) { %>
            <div>
                <input type="hidden" name="_csrf" value="<%= _csrf %>" />
            </div>
        <% } %>
        <p>
            <button raised class="btn-save" id="submit" onclick="submitForm()">
                Сохранить
            </button>
        </p>
    </div>
</form>

<script>
    function submitForm() {
        // Assign JSONEditor value to form textarea
        for (var id in jsonEditor) {
            try {
                var json = jsonEditor[id].get();
                $('#form-' + id).val(JSON.stringify(json));
            } catch (e) {
                alert('JSON is invalid.');
                $('#form-' + id).show().focus().hide();
                jsonEditor[id].focus();
                return false;
            }
        }
        ;

        for (var id in tables) {
            try {
                var table = tables[id].getData().map((item) => {
                    return [null].concat(item)
                });
                $('#form-' + id).val(JSON.stringify(table));
            } catch (e) {
                alert('Table is invalid!');
                return false;
            }
        }
        document.getElementById('form').submit();
    }
</script>

